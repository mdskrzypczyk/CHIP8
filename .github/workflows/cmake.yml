name: CMake

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install Linting Dependencies
      # Install Clang-Tidy
      run: sudo apt-get install clang-format

    - name: Lint
      run: scripts/check-format.sh

  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      # Update submodules (GoogleTest)
      run: git submodule update --init --recursive

      # Refresh package repositories
    - name: Update Repository Mirrors
      run: sudo apt-get update

    - name: Install Build Dependencies
      # Install SDL2
      run: sudo apt-get install doxygen gcovr libsdl2-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Create code coverage
      working-directory: ${{github.workspace}}/build
      run: make coverage

    - name: Archive code coverage results
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: ${{github.workspace}}/build/coverage

    - name: Create Documentation
      working-directory: ${{github.workspace}}/build
      run: make docs

    - name: Archive Documentation
      uses: actions/upload-artifact@v2
      with:
        name: documentation
        path: ${{github.workspace}}/build/docs